---

- hosts: all
  become: yes
  remote_user: webtech
  vars_files:
    - vars/main-vars.yml
  pre_tasks:
#    - name: checking for lock files
#      include_tasks: tasks/lock_file.yml  
    - name: create local folders for working
      local_action:
        module: file
        path: "{{ item }}"
        state: directory
        recurse: yes
        mode: 0777
      with_items:
        - "{{ build_local_server_path }}"
        - "{{ tomcat_local_server_path }}"
        - "{{ local_git_path }}"
    - include_tasks: tasks/git.yml
      run_once: yes
    - name: including git vars - configurations
      local_action:
        module: include_vars
        dir: '{{ local_git_path }}/{{ config_env }}/'
        files_matching: '.yml'
      run_once: yes
    - meta: refresh_inventory
    - include_tasks: tasks/nexus_build_pull.yml
      run_once: yes
    - include_tasks: tasks/nexus_tomcat_pull.yml
      with_items:
        - "{{ nodeList }}"
      loop_control:
        loop_var: node_name
    - name: create product folder
      file:
        path: "/U01/{{ product }}/"
        state: directory
        recurse: yes
        mode: 0775
        owner: webtech
        group: analytics
    - include_tasks: tasks/db_version_check.yml
      #when: pkg.find('db_sqlalters') != -1 or pkg.find('db_migration') != -1	
  roles: 
    - { role: ha_conf_update, when: pkg.find('ha') != -1 }
    - { role: nginx_conf_update, when: pkg.find('nginx') != -1 }
    - { role: php_conf_update, when: pkg.find('php') != -1 }
    - { role: tomcat_update, when: pkg.find('tomcat') != -1 }
    - { role: properties_update, when: pkg.find('properties') != -1 }
    - { role: db_update, when: pkg.find('db_sqlalters') != -1 }
    - { role: db_migration, when: pkg.find('db_migration') != -1 }
    - { role: db_flyway_migration, when: pkg.find('db_flyway_migration') != -1 }
    - { role: symphony_cache_clear, when: pkg.find('symphony_cache_clear') != -1 }
    - { role: app_dynamics_role, when: pkg.find('appd') != -1 }
  post_tasks:
    - include_tasks: tasks/remove_old_files.yml
      run_once: yes
      with_items:
        - "{{ nodeList }}"
      loop_control:
        loop_var: node_name