---

- name: Check if build folder exists or not
  stat: path="{{ item.tomcat_build_path }}/{{ build_folder }}/"
  register: tomcat_build_path_op
  with_items: "{{ node_name }}"

- name: create backup folder
  file: path="{{ backup_path }}Release_{{ git_tag }}_{{ NewBuildNumber.stdout }}/{{ item.name }}" state=directory recurse=yes mode=0755
  with_items:
    - "{{ node_name }}"

- name: Backup the existing build folder
  command: mv "{{ item.0.tomcat_build_path }}/{{ build_folder }}/" "{{ backup_path }}Release_{{ git_tag }}_{{ NewBuildNumber.stdout }}/{{ item.0.name }}/"
  when: "{{ item.1.stat.exists }}"
  with_together:
    - "{{ node_name }}"
    - "{{ tomcat_build_path_op.results }}"

- name: Check if tomcat folder exists or not
  stat: path="{{ item.tomcat_path }}/{{ item.tomcat_folder }}"
  register: tomcat_path_op
  with_items: "{{ node_name }}"

- name: Backup the existing tomcat folder
  command: mv "{{ item.0.tomcat_path }}/{{ item.0.tomcat_folder }}" "{{ backup_path }}Release_{{ git_tag }}_{{ NewBuildNumber.stdout }}/{{ item.0.name }}/"
  when: "{{ item.1.stat.exists }}"
  with_together:
    - "{{ node_name }}"
    - "{{ tomcat_path_op.results }}"

#Create new folders (Build & Tomcat)
- name: Create fresh build folder
  file: path="{{ item.0.tomcat_build_path }}" state=directory recurse=yes owner=webtech group=analytics mode=0755
  when: not {{ item.1.stat.exists }}
  with_together:
    - "{{ node_name }}"
    - "{{ tomcat_build_path_op.results }}"

- name: Create fresh tomcat folder
  file: path="{{ item.0.tomcat_path }}" state=directory recurse=yes owner=webtech group=analytics mode=0755
  when: not {{ item.1.stat.exists }}
  with_together:
    - "{{ node_name }}"
    - "{{ tomcat_path_op.results }}"

- name: Create build required folders
  file: path="{{ item.0.tomcat_build_path }}/{{ item.1 }}" state=directory owner=webtech group=analytics mode=0775
  with_subelements:
    - "{{ node_name }}"
    - build_required_folders

- name: Create build required folders
  file: path="{{ item.0.reporting_path }}/{{ item.1 }}" state=directory owner=webtech group=analytics mode=0775
  when: item.0.name == "reporting"
  with_subelements:
    - "{{ node_name }}"
    - reporting_required_folders
  ignore_errors: true

- name: extract build
  unarchive:
    src: "{{ build_local_server_path }}{{ build_artifact_id|lower if env == 'Dev' or env == 'Qc' or env == 'Preprod' or env == 'Speedy' else build_artifact_id }}.zip"
    dest: "{{ item.tomcat_build_path }}/"
    owner: webtech
    group: analytics
    mode: '0775'
    remote_src: 'no'
  with_items:
    - "{{ node_name }}"

- name: give permissions to builds folder
  file: path="{{ item.tomcat_build_path }}/{{ build_folder }}/" state=directory owner=webtech group=analytics mode=0775
  with_items:
    - "{{ node_name }}"

- name: extract tomcat
  unarchive:
    src: "{{ tomcat_local_server_path }}{{ tomcat_artifact_id }}-{{ item.tomcat_version }}.zip"
    dest: "{{ item.tomcat_path }}/"
    owner: webtech
    group: analytics
    mode: '0775'
    remote_src: 'no'
  with_items:
    - "{{ node_name }}"

#Get configuration variables from GIT and modifying the tomcat files

- name: Add template string to catalina.sh file
  lineinfile:
    dest: "{{ item.tomcat_path }}/{{ item.tomcat_folder }}/bin/catalina.sh"
    insertbefore:  '^# OS specific support.'
    line: "{{ catalina_config }}"
  with_items:
    - "{{ node_name }}"

- name: Create {{ product }} tomcat logs folder
  file: path="{{ item.tomcat_log_path }}" state=directory recurse=yes owner=webtech group=analytics mode=0755
  with_items:
    - "{{ node_name }}"

- name: Modify the required shell scripts
  template:
    src: "{{ local_git_path }}{{ config_env }}/{{ item.1 }}.j2"
    dest: "{{ item.0.tomcat_path }}/{{ item.0.tomcat_folder }}/bin/{{ item.1 }}.sh"
    owner: webtech
    group: analytics
    mode: '0775'
    backup: yes
  with_subelements:
    - "{{ node_name }}"
    - shell_scripts

- name: modify the server.xml
  template:
    src: "{{ build_local_server_path }}{{ build_folder }}/templates/{{ item.server_xml_name }}"
    dest: "{{ item.tomcat_path }}/{{ item.tomcat_folder }}/conf/server.xml"
    owner: webtech
    group: analytics
    mode: '0775'
    backup: yes
  with_items:
    - "{{ node_name }}"

- name: get the gid 
  shell: id -g
  become: no 
  register: gid

- name: set_fact for gid
  set_fact:
    bashrc_gid: "{{ gid.stdout }}"   

- name: update the bashrc file
  blockinfile:
    dest: /etc/bashrc
    insertafter: EOF
    block: |
        {{ bashrc_block }}
  when: item.bashrc
  with_items:
    - "{{ node_name }}"

- name: delete the tempaltes folder 
  file: path="{{ item.tomcat_build_path }}/{{ build_folder }}/templates" state=absent
  with_items:
    - "{{ node_name }}"	
#- name: Start tomcat
#  shell:  runuser -l webtech -c 'cd {{ tomcat_path }}/{{ tomcat_folder }}bin && ./start.sh'