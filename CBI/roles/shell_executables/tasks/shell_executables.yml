---

- name: Check if build folder exists or not
  stat: path="{{ build_path }}/{{ build_folder }}/"
  register: tomcat_build_path_op
  with_items: "{{ node_name }}"

- name: create backup folder
  file: path="{{ backup_path }}Release_{{ git_tag }}_{{ NewBuildNumber.stdout }}/" state=directory recurse=yes mode=0755
  with_items:
    - "{{ node_name }}"

- name: backup build with {{ git_tag }}_{{ NewBuildNumber.stdout }} backup
  shell: mv "{{ item.0.application_node_path }}/{{ build_folder }}" "{{ backup_path }}Release_{{ git_tag }}_{{ NewBuildNumber.stdout }}/"
  with_together:
    - "{{ node_name }}"
    - "{{ tomcat_build_path_op.results }}"
  ignore_errors: true

- name: backup build with {{ git_tag }}_{{ NewBuildNumber.stdout }} backup
  shell: mv "{{ item.0.application_node_path }}/bin" "{{ backup_path }}Release_{{ git_tag }}_{{ NewBuildNumber.stdout }}/"
  with_together:
    - "{{ node_name }}"
    - "{{ tomcat_build_path_op.results }}"
  ignore_errors: true

- name: extract build
  unarchive:
    src: "{{ build_local_server_path }}{{ build_artifact_id|lower if env == 'Dev' or env == 'Qc' or env == 'Preprod' or env == 'Speedy' else build_artifact_id }}.zip"
    dest: "{{ item.application_node_path }}/"
    owner: webtech
    group: analytics
    mode: '0775'
    remote_src: 'no'
  with_items:
    - "{{ node_name }}"

- name: give permissions to builds folder
  file: path="{{ item.application_node_path }}/" state=directory owner=webtech recurse=yes group=analytics mode=0775
  with_items:
    - "{{ node_name }}"

- name: Create build required folders
  file: path="{{ item.0.tomcat_build_path }}/{{ item.1 }}" state=directory owner=webtech group=analytics mode=0775
  with_subelements:
    - "{{ node_name }}"
    - build_required_folders

- name: Modify the required shell scripts
  template:
    src: "{{ local_git_path }}{{ config_env }}/bin/{{ item.1 }}.sh"
    dest: "{{ item.0.shell_files_path }}/{{ item.1 }}.sh"
    owner: webtech
    group: analytics
    mode: '0775'
    backup: no
  with_subelements:
    - "{{ node_name }}"
    - shell_scripts
  ignore_errors: true

- name: copy consul_ui files
  command: cp -r {{ item.process_zip_path }}{{ item.name }} {{ application_node_path }}
  with_items:
    - "{{ node_name }}"
    
#- copy:
#    src: "{{ item.process_zip_path }}{{ item.name }}"
#    dest: "{{ application_node_path }}/"
#    owner: webtech
#    group: analytics
#    mode: '0775'
#    remote_src: 'yes'
#    recurse: 'yes'
#  with_items:
#    - "{{ node_name }}"
