---

  - name: Get DB url from consul
    uri:
      url: http://{{ consul_ip }}:{{ consul_port }}/v1/kv/{{ setup_env }}/{{ product|upper }}/{{ DB_URL_KEY }}?raw
      method: GET
      return_content: yes
    register: url

  - name: Get url var
    set_fact:
      flyway_url: "{{ url.content }}"

  - name: Get DB username from consul
    uri:
      url: http://{{ consul_ip }}:{{ consul_port }}/v1/kv/{{ setup_env }}/{{ product|upper }}/{{ DB_USERNAME_KEY }}?raw
      method: GET
      return_content: yes
    register: username

  - name: Get username var
    set_fact:
      flyway_user: "{{ username.content }}"

  - name: Get DB password from consul
    uri:
      url: http://{{ consul_ip }}:{{ consul_port }}/v1/kv/{{ setup_env }}/{{ product|upper }}/{{ DB_PASSWORD_KEY }}?raw
      method: GET
      return_content: yes
    register: password

  - name: Get password var
    set_fact:
      flyway_password: "{{ password.content }}"

  - name: fill template flyway.conf.j2 with the values
    template:
      src: "{{ local_git_path }}{{ config_env }}/flyway.conf.j2"
      dest: "/opt/flyway-{{ flyway_version }}/conf/flyway.conf"
      owner: webtech
      group: analytics
      mode: '0775'
      
  - name: run flyway baseline
    shell: runuser -l webtech -c 'flyway -baselineVersion={{ baselineVersion }} baseline'
    register: flyway_baseline
    ignore_errors: true
    
  - debug:
      var: flyway_baseline.stdout_lines

  - name: run flyway info
    shell: runuser -l webtech -c 'flyway info'
    register: flyway_info

  - debug:
     var: flyway_info.stdout_lines

  - name: run flyway migrate
    shell: runuser -l webtech -c 'flyway migrate'
    register: flyway_migrate

  - debug:
     var: flyway_migrate.stdout_lines
   
  - name: run flyway validate
    shell: runuser -l webtech -c 'flyway validate'
    register: flyway_validate

